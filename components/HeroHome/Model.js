import React, { useRef } from "react";
import { useFrame } from "@react-three/fiber";
import { Box, useGLTF } from "@react-three/drei";
import { MeshPhysicalMaterial } from "three";
import { MeshBasicMaterial } from "three";
import { MeshPhongMaterial } from "three";

// Auto-generated by: https://github.com/pmndrs/gltfjsx
export default function Model({ url, ...props }) {
  const group = useRef();
  const m1group = useRef();
  const { nodes, materials } = useGLTF("/m1.glb");
  useFrame((state) => {
    group.current.children.forEach((child, index) => {
      child.position.y += Math.sin(index * 1000 + state.clock.elapsedTime) / 50;
      child.rotation.x +=
        (Math.sin(index * 1000 + state.clock.elapsedTime) * Math.PI) / 2000;
      child.rotation.y +=
        (Math.cos(index * 1000 + state.clock.elapsedTime) * Math.PI) / 3000;
      child.rotation.z +=
        (Math.sin(index * 1000 + state.clock.elapsedTime) * Math.PI) / 4000;
    });
  });
  return (
    <group>
      <group ref={group} {...props} dispose={null}>
        <Box
          scale={7}
          position={[0.8, -1.96, 2.16]}
          rotation={[1.76, 0.07, -0.19]}
        >
          <meshPhongMaterial
            attach="material"
            color="#FFFFFF"
            opacity={1}
            transparent
          />
        </Box>
        <Box
          scale={7}
          position={[19.9, -12.6, -17.01]}
          rotation={[1.26, 0.91, -1.86]}
        >
          <meshPhongMaterial attach="material" color="#ffffff" />
        </Box>
        <Box
          scale={7}
          position={[20.22, 1.99, 4.03]}
          rotation={[1.55, 0.32, -0.76]}
        >
          <meshPhongMaterial attach="material" color="#ffffff" />
        </Box>
        <Box
          scale={7}
          position={[-21.4, -14.96, -13.21]}
          rotation={[1.83, -0.23, 0.91]}
        >
          <meshPhongMaterial attach="material" color="#ffffff" />
        </Box>
      </group>
      <group scale={5} ref={m1group} {...props} dispose={null}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Vector.geometry}
          material={materials.SVGMat}
          position={[-0.14, 1.41 - 3, -5]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={213.41}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Vector_2.geometry}
          material={materials["SVGMat.001"]}
          position={[1.7, 0.31 - 3, -5]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={213.41}
        />
      </group>
    </group>
  );
}
